Terminals unused in grammar

    tOR
    tAND
    tVOID


State 62 conflicts: 4 shift/reduce
State 63 conflicts: 4 shift/reduce
State 64 conflicts: 4 shift/reduce
State 65 conflicts: 4 shift/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 9 shift/reduce
State 68 conflicts: 9 shift/reduce
State 69 conflicts: 9 shift/reduce
State 70 conflicts: 9 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Funs

    2 Funs: Fun Funs
    3     | Fun

    4 Fun: tINT tID tOP Args tCP Body

    5 Args: tINT tID ArgsM
    6     | ε

    7 ArgsM: tCOMA tINT tID ArgsM
    8      | ε

    9 $@1: ε

   10 Body: tOB $@1 Lins tCB

   11 Lins: Ins Lins
   12     | ε

   13 Ins: Aff
   14    | If
   15    | While
   16    | Decla

   17 Aff: tID tAS E tSEM

   18 Decla: tINT Decla1 DeclaS tSEM

   19 Decla1: tID
   20       | tID tAS E

   21 DeclaS: ε
   22       | tCOMA Decla1 DeclaS

   23 $@2: ε

   24 $@3: ε

   25 If: tIF tOP E tCP $@2 Body $@3 Else

   26 $@4: ε

   27 Else: tELSE $@4 Body
   28     | ε

   29 $@5: ε

   30 While: tWHILE tOP E tCP $@5 Body

   31 E: tNB
   32  | tID
   33  | E tPLUS E
   34  | E tMUL E
   35  | E tMINUS E
   36  | E tDIV E
   37  | E tEQ E
   38  | E tSUP E
   39  | E tSUPOREQ E
   40  | E tINF E
   41  | E tINFOREQ E


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tINT (258) 4 5 7 18
    tOP (259) 4 25 30
    tCP (260) 4 25 30
    tOB (261) 10
    tCB (262) 10
    tAS (263) 17 20
    tSEM (264) 17 18
    tCOMA (265) 7 22
    tPLUS (266) 33
    tMINUS (267) 35
    tDIV (268) 36
    tMUL (269) 34
    tELSE (270) 27
    tOR (271)
    tAND (272)
    tVOID (273)
    tEQ (274) 37
    tINFOREQ (275) 41
    tSUP (276) 38
    tSUPOREQ (277) 39
    tINF (278) 40
    tID <name> (279) 4 5 7 17 19 20 32
    tIF <ligne> (280) 25
    tWHILE <ligne2> (281) 30
    tNB <nb> (282) 31


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    Program (29)
        on left: 1
        on right: 0
    Funs (30)
        on left: 2 3
        on right: 1 2
    Fun (31)
        on left: 4
        on right: 2 3
    Args (32)
        on left: 5 6
        on right: 4
    ArgsM (33)
        on left: 7 8
        on right: 5 7
    Body (34)
        on left: 10
        on right: 4 25 27 30
    $@1 (35)
        on left: 9
        on right: 10
    Lins (36)
        on left: 11 12
        on right: 10 11
    Ins (37)
        on left: 13 14 15 16
        on right: 11
    Aff (38)
        on left: 17
        on right: 13
    Decla (39)
        on left: 18
        on right: 16
    Decla1 (40)
        on left: 19 20
        on right: 18 22
    DeclaS (41)
        on left: 21 22
        on right: 18 22
    If (42)
        on left: 25
        on right: 14
    $@2 (43)
        on left: 23
        on right: 25
    $@3 (44)
        on left: 24
        on right: 25
    Else (45)
        on left: 27 28
        on right: 25
    $@4 (46)
        on left: 26
        on right: 27
    While (47)
        on left: 30
        on right: 15
    $@5 (48)
        on left: 29
        on right: 30
    E (49)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 17 20 25 30 33 34 35 36 37 38 39 40 41


State 0

    0 $accept: • Program $end

    tINT  shift, and go to state 1

    Program  go to state 2
    Funs     go to state 3
    Fun      go to state 4


State 1

    4 Fun: tINT • tID tOP Args tCP Body

    tID  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: Funs •

    $default  reduce using rule 1 (Program)


State 4

    2 Funs: Fun • Funs
    3     | Fun •

    tINT  shift, and go to state 1

    $default  reduce using rule 3 (Funs)

    Funs  go to state 7
    Fun   go to state 4


State 5

    4 Fun: tINT tID • tOP Args tCP Body

    tOP  shift, and go to state 8


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    2 Funs: Fun Funs •

    $default  reduce using rule 2 (Funs)


State 8

    4 Fun: tINT tID tOP • Args tCP Body

    tINT  shift, and go to state 9

    $default  reduce using rule 6 (Args)

    Args  go to state 10


State 9

    5 Args: tINT • tID ArgsM

    tID  shift, and go to state 11


State 10

    4 Fun: tINT tID tOP Args • tCP Body

    tCP  shift, and go to state 12


State 11

    5 Args: tINT tID • ArgsM

    tCOMA  shift, and go to state 13

    $default  reduce using rule 8 (ArgsM)

    ArgsM  go to state 14


State 12

    4 Fun: tINT tID tOP Args tCP • Body

    tOB  shift, and go to state 15

    Body  go to state 16


State 13

    7 ArgsM: tCOMA • tINT tID ArgsM

    tINT  shift, and go to state 17


State 14

    5 Args: tINT tID ArgsM •

    $default  reduce using rule 5 (Args)


State 15

   10 Body: tOB • $@1 Lins tCB

    $default  reduce using rule 9 ($@1)

    $@1  go to state 18


State 16

    4 Fun: tINT tID tOP Args tCP Body •

    $default  reduce using rule 4 (Fun)


State 17

    7 ArgsM: tCOMA tINT • tID ArgsM

    tID  shift, and go to state 19


State 18

   10 Body: tOB $@1 • Lins tCB

    tINT    shift, and go to state 20
    tID     shift, and go to state 21
    tIF     shift, and go to state 22
    tWHILE  shift, and go to state 23

    $default  reduce using rule 12 (Lins)

    Lins   go to state 24
    Ins    go to state 25
    Aff    go to state 26
    Decla  go to state 27
    If     go to state 28
    While  go to state 29


State 19

    7 ArgsM: tCOMA tINT tID • ArgsM

    tCOMA  shift, and go to state 13

    $default  reduce using rule 8 (ArgsM)

    ArgsM  go to state 30


State 20

   18 Decla: tINT • Decla1 DeclaS tSEM

    tID  shift, and go to state 31

    Decla1  go to state 32


State 21

   17 Aff: tID • tAS E tSEM

    tAS  shift, and go to state 33


State 22

   25 If: tIF • tOP E tCP $@2 Body $@3 Else

    tOP  shift, and go to state 34


State 23

   30 While: tWHILE • tOP E tCP $@5 Body

    tOP  shift, and go to state 35


State 24

   10 Body: tOB $@1 Lins • tCB

    tCB  shift, and go to state 36


State 25

   11 Lins: Ins • Lins

    tINT    shift, and go to state 20
    tID     shift, and go to state 21
    tIF     shift, and go to state 22
    tWHILE  shift, and go to state 23

    $default  reduce using rule 12 (Lins)

    Lins   go to state 37
    Ins    go to state 25
    Aff    go to state 26
    Decla  go to state 27
    If     go to state 28
    While  go to state 29


State 26

   13 Ins: Aff •

    $default  reduce using rule 13 (Ins)


State 27

   16 Ins: Decla •

    $default  reduce using rule 16 (Ins)


State 28

   14 Ins: If •

    $default  reduce using rule 14 (Ins)


State 29

   15 Ins: While •

    $default  reduce using rule 15 (Ins)


State 30

    7 ArgsM: tCOMA tINT tID ArgsM •

    $default  reduce using rule 7 (ArgsM)


State 31

   19 Decla1: tID •
   20       | tID • tAS E

    tAS  shift, and go to state 38

    $default  reduce using rule 19 (Decla1)


State 32

   18 Decla: tINT Decla1 • DeclaS tSEM

    tCOMA  shift, and go to state 39

    $default  reduce using rule 21 (DeclaS)

    DeclaS  go to state 40


State 33

   17 Aff: tID tAS • E tSEM

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 43


State 34

   25 If: tIF tOP • E tCP $@2 Body $@3 Else

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 44


State 35

   30 While: tWHILE tOP • E tCP $@5 Body

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 45


State 36

   10 Body: tOB $@1 Lins tCB •

    $default  reduce using rule 10 (Body)


State 37

   11 Lins: Ins Lins •

    $default  reduce using rule 11 (Lins)


State 38

   20 Decla1: tID tAS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 46


State 39

   22 DeclaS: tCOMA • Decla1 DeclaS

    tID  shift, and go to state 31

    Decla1  go to state 47


State 40

   18 Decla: tINT Decla1 DeclaS • tSEM

    tSEM  shift, and go to state 48


State 41

   32 E: tID •

    $default  reduce using rule 32 (E)


State 42

   31 E: tNB •

    $default  reduce using rule 31 (E)


State 43

   17 Aff: tID tAS E • tSEM
   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tSEM      shift, and go to state 49
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 44

   25 If: tIF tOP E • tCP $@2 Body $@3 Else
   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tCP       shift, and go to state 59
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 45

   30 While: tWHILE tOP E • tCP $@5 Body
   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tCP       shift, and go to state 60
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 46

   20 Decla1: tID tAS E •
   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    $default  reduce using rule 20 (Decla1)


State 47

   22 DeclaS: tCOMA Decla1 • DeclaS

    tCOMA  shift, and go to state 39

    $default  reduce using rule 21 (DeclaS)

    DeclaS  go to state 61


State 48

   18 Decla: tINT Decla1 DeclaS tSEM •

    $default  reduce using rule 18 (Decla)


State 49

   17 Aff: tID tAS E tSEM •

    $default  reduce using rule 17 (Aff)


State 50

   33 E: E tPLUS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 62


State 51

   35 E: E tMINUS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 63


State 52

   36 E: E tDIV • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 64


State 53

   34 E: E tMUL • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 65


State 54

   37 E: E tEQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 66


State 55

   41 E: E tINFOREQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 67


State 56

   38 E: E tSUP • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 68


State 57

   39 E: E tSUPOREQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 69


State 58

   40 E: E tINF • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 70


State 59

   25 If: tIF tOP E tCP • $@2 Body $@3 Else

    $default  reduce using rule 23 ($@2)

    $@2  go to state 71


State 60

   30 While: tWHILE tOP E tCP • $@5 Body

    $default  reduce using rule 29 ($@5)

    $@5  go to state 72


State 61

   22 DeclaS: tCOMA Decla1 DeclaS •

    $default  reduce using rule 22 (DeclaS)


State 62

   33 E: E • tPLUS E
   33  | E tPLUS E •
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tINFOREQ  [reduce using rule 33 (E)]
    tSUP      [reduce using rule 33 (E)]
    tSUPOREQ  [reduce using rule 33 (E)]
    tINF      [reduce using rule 33 (E)]
    $default  reduce using rule 33 (E)


State 63

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   35  | E tMINUS E •
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tINFOREQ  [reduce using rule 35 (E)]
    tSUP      [reduce using rule 35 (E)]
    tSUPOREQ  [reduce using rule 35 (E)]
    tINF      [reduce using rule 35 (E)]
    $default  reduce using rule 35 (E)


State 64

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   36  | E tDIV E •
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tINFOREQ  [reduce using rule 36 (E)]
    tSUP      [reduce using rule 36 (E)]
    tSUPOREQ  [reduce using rule 36 (E)]
    tINF      [reduce using rule 36 (E)]
    $default  reduce using rule 36 (E)


State 65

   33 E: E • tPLUS E
   34  | E • tMUL E
   34  | E tMUL E •
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tINFOREQ  [reduce using rule 34 (E)]
    tSUP      [reduce using rule 34 (E)]
    tSUPOREQ  [reduce using rule 34 (E)]
    tINF      [reduce using rule 34 (E)]
    $default  reduce using rule 34 (E)


State 66

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   37  | E tEQ E •
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tINFOREQ  [reduce using rule 37 (E)]
    tSUP      [reduce using rule 37 (E)]
    tSUPOREQ  [reduce using rule 37 (E)]
    tINF      [reduce using rule 37 (E)]
    $default  reduce using rule 37 (E)


State 67

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E
   41  | E tINFOREQ E •

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tPLUS     [reduce using rule 41 (E)]
    tMINUS    [reduce using rule 41 (E)]
    tDIV      [reduce using rule 41 (E)]
    tMUL      [reduce using rule 41 (E)]
    tEQ       [reduce using rule 41 (E)]
    tINFOREQ  [reduce using rule 41 (E)]
    tSUP      [reduce using rule 41 (E)]
    tSUPOREQ  [reduce using rule 41 (E)]
    tINF      [reduce using rule 41 (E)]
    $default  reduce using rule 41 (E)


State 68

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   38  | E tSUP E •
   39  | E • tSUPOREQ E
   40  | E • tINF E
   41  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tPLUS     [reduce using rule 38 (E)]
    tMINUS    [reduce using rule 38 (E)]
    tDIV      [reduce using rule 38 (E)]
    tMUL      [reduce using rule 38 (E)]
    tEQ       [reduce using rule 38 (E)]
    tINFOREQ  [reduce using rule 38 (E)]
    tSUP      [reduce using rule 38 (E)]
    tSUPOREQ  [reduce using rule 38 (E)]
    tINF      [reduce using rule 38 (E)]
    $default  reduce using rule 38 (E)


State 69

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   39  | E tSUPOREQ E •
   40  | E • tINF E
   41  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tPLUS     [reduce using rule 39 (E)]
    tMINUS    [reduce using rule 39 (E)]
    tDIV      [reduce using rule 39 (E)]
    tMUL      [reduce using rule 39 (E)]
    tEQ       [reduce using rule 39 (E)]
    tINFOREQ  [reduce using rule 39 (E)]
    tSUP      [reduce using rule 39 (E)]
    tSUPOREQ  [reduce using rule 39 (E)]
    tINF      [reduce using rule 39 (E)]
    $default  reduce using rule 39 (E)


State 70

   33 E: E • tPLUS E
   34  | E • tMUL E
   35  | E • tMINUS E
   36  | E • tDIV E
   37  | E • tEQ E
   38  | E • tSUP E
   39  | E • tSUPOREQ E
   40  | E • tINF E
   40  | E tINF E •
   41  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    tPLUS     [reduce using rule 40 (E)]
    tMINUS    [reduce using rule 40 (E)]
    tDIV      [reduce using rule 40 (E)]
    tMUL      [reduce using rule 40 (E)]
    tEQ       [reduce using rule 40 (E)]
    tINFOREQ  [reduce using rule 40 (E)]
    tSUP      [reduce using rule 40 (E)]
    tSUPOREQ  [reduce using rule 40 (E)]
    tINF      [reduce using rule 40 (E)]
    $default  reduce using rule 40 (E)


State 71

   25 If: tIF tOP E tCP $@2 • Body $@3 Else

    tOB  shift, and go to state 15

    Body  go to state 73


State 72

   30 While: tWHILE tOP E tCP $@5 • Body

    tOB  shift, and go to state 15

    Body  go to state 74


State 73

   25 If: tIF tOP E tCP $@2 Body • $@3 Else

    $default  reduce using rule 24 ($@3)

    $@3  go to state 75


State 74

   30 While: tWHILE tOP E tCP $@5 Body •

    $default  reduce using rule 30 (While)


State 75

   25 If: tIF tOP E tCP $@2 Body $@3 • Else

    tELSE  shift, and go to state 76

    $default  reduce using rule 28 (Else)

    Else  go to state 77


State 76

   27 Else: tELSE • $@4 Body

    $default  reduce using rule 26 ($@4)

    $@4  go to state 78


State 77

   25 If: tIF tOP E tCP $@2 Body $@3 Else •

    $default  reduce using rule 25 (If)


State 78

   27 Else: tELSE $@4 • Body

    tOB  shift, and go to state 15

    Body  go to state 79


State 79

   27 Else: tELSE $@4 Body •

    $default  reduce using rule 27 (Else)
