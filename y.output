Nonterminals useless in grammar

    Arg
    ArgList
    FuncCall


Terminals unused in grammar

    tOR
    tAND


Rules useless in grammar

   55 Arg: tINT tID

   56 ArgList: Arg
   57        | Arg tCOMA ArgList
   58        | ε

   59 FuncCall: tID tOP ArgList tCP


Grammar

    0 $accept: Program $end

    1 Program: Funs

    2 Funs: Fun Funs
    3     | Fun

    4 Fun: ReturnType FunName tOP Args tCP Body

    5 FunName: tID

    6 ReturnType: tINT
    7           | tVOID

    8 $@1: ε

    9 Args: tINT tID $@1 ArgsM
   10     | ε

   11 $@2: ε

   12 ArgsM: tCOMA tINT tID $@2 ArgsM
   13      | ε

   14 $@3: ε

   15 $@4: ε

   16 Body: $@3 tOB $@4 Lins tCB

   17 $@5: ε

   18 Lins: $@5 Ins Lins
   19     | ε

   20 Return: tRETURN E tSEM

   21 Ins: Aff
   22    | If
   23    | While
   24    | Decla
   25    | Return

   26 $@6: ε

   27 Aff: $@6 tID tAS E tSEM

   28 $@7: ε

   29 Decla: $@7 tINT Decla1 DeclaS tSEM

   30 Decla1: tID
   31       | tID tAS E

   32 DeclaS: ε
   33       | tCOMA Decla1 DeclaS

   34 $@8: ε

   35 $@9: ε

   36 $@10: ε

   37 If: tIF $@8 tOP E tCP $@9 Body $@10 Else

   38 $@11: ε

   39 Else: tELSE $@11 Body
   40     | ε

   41 $@12: ε

   42 $@13: ε

   43 While: tWHILE $@12 tOP E tCP $@13 Body

   44 E: E tPLUS E
   45  | E tMUL E
   46  | E tMINUS E
   47  | E tDIV E
   48  | E tEQ E
   49  | E tSUP E
   50  | E tSUPOREQ E
   51  | E tINF E
   52  | E tINFOREQ E
   53  | tNB
   54  | tID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tINT (258) 6 9 12 29
    tOP (259) 4 37 43
    tCP (260) 4 37 43
    tOB (261) 16
    tCB (262) 16
    tAS (263) 27 31
    tSEM (264) 20 27 29
    tCOMA (265) 12 33
    tPLUS (266) 44
    tMINUS (267) 46
    tDIV (268) 47
    tMUL (269) 45
    tELSE (270) 39
    tOR (271)
    tAND (272)
    tVOID (273) 7
    tEQ (274) 48
    tINFOREQ (275) 52
    tSUP (276) 49
    tSUPOREQ (277) 50
    tINF (278) 51
    tRETURN (279) 20
    tID <name> (280) 5 9 12 27 30 31 54
    tIF <ligne> (281) 37
    tWHILE <ligne2> (282) 43
    tNB <nb> (283) 53


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Program (30)
        on left: 1
        on right: 0
    Funs (31)
        on left: 2 3
        on right: 1 2
    Fun <name> (32)
        on left: 4
        on right: 2 3
    FunName <name> (33)
        on left: 5
        on right: 4
    ReturnType (34)
        on left: 6 7
        on right: 4
    Args (35)
        on left: 9 10
        on right: 4
    $@1 (36)
        on left: 8
        on right: 9
    ArgsM (37)
        on left: 12 13
        on right: 9 12
    $@2 (38)
        on left: 11
        on right: 12
    Body (39)
        on left: 16
        on right: 4 37 39 43
    $@3 (40)
        on left: 14
        on right: 16
    $@4 (41)
        on left: 15
        on right: 16
    Lins (42)
        on left: 18 19
        on right: 16 18
    $@5 (43)
        on left: 17
        on right: 18
    Return (44)
        on left: 20
        on right: 25
    Ins (45)
        on left: 21 22 23 24 25
        on right: 18
    Aff (46)
        on left: 27
        on right: 21
    $@6 (47)
        on left: 26
        on right: 27
    Decla (48)
        on left: 29
        on right: 24
    $@7 (49)
        on left: 28
        on right: 29
    Decla1 (50)
        on left: 30 31
        on right: 29 33
    DeclaS (51)
        on left: 32 33
        on right: 29 33
    If (52)
        on left: 37
        on right: 22
    $@8 (53)
        on left: 34
        on right: 37
    $@9 (54)
        on left: 35
        on right: 37
    $@10 (55)
        on left: 36
        on right: 37
    Else (56)
        on left: 39 40
        on right: 37
    $@11 (57)
        on left: 38
        on right: 39
    While (58)
        on left: 43
        on right: 23
    $@12 (59)
        on left: 41
        on right: 43
    $@13 (60)
        on left: 42
        on right: 43
    E (61)
        on left: 44 45 46 47 48 49 50 51 52 53 54
        on right: 20 27 31 37 43 44 45 46 47 48 49 50 51 52


State 0

    0 $accept: • Program $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    Program     go to state 3
    Funs        go to state 4
    Fun         go to state 5
    ReturnType  go to state 6


State 1

    6 ReturnType: tINT •

    $default  reduce using rule 6 (ReturnType)


State 2

    7 ReturnType: tVOID •

    $default  reduce using rule 7 (ReturnType)


State 3

    0 $accept: Program • $end

    $end  shift, and go to state 7


State 4

    1 Program: Funs •

    $default  reduce using rule 1 (Program)


State 5

    2 Funs: Fun • Funs
    3     | Fun •

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 3 (Funs)

    Funs        go to state 8
    Fun         go to state 5
    ReturnType  go to state 6


State 6

    4 Fun: ReturnType • FunName tOP Args tCP Body

    tID  shift, and go to state 9

    FunName  go to state 10


State 7

    0 $accept: Program $end •

    $default  accept


State 8

    2 Funs: Fun Funs •

    $default  reduce using rule 2 (Funs)


State 9

    5 FunName: tID •

    $default  reduce using rule 5 (FunName)


State 10

    4 Fun: ReturnType FunName • tOP Args tCP Body

    tOP  shift, and go to state 11


State 11

    4 Fun: ReturnType FunName tOP • Args tCP Body

    tINT  shift, and go to state 12

    $default  reduce using rule 10 (Args)

    Args  go to state 13


State 12

    9 Args: tINT • tID $@1 ArgsM

    tID  shift, and go to state 14


State 13

    4 Fun: ReturnType FunName tOP Args • tCP Body

    tCP  shift, and go to state 15


State 14

    9 Args: tINT tID • $@1 ArgsM

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 15

    4 Fun: ReturnType FunName tOP Args tCP • Body

    $default  reduce using rule 14 ($@3)

    Body  go to state 17
    $@3   go to state 18


State 16

    9 Args: tINT tID $@1 • ArgsM

    tCOMA  shift, and go to state 19

    $default  reduce using rule 13 (ArgsM)

    ArgsM  go to state 20


State 17

    4 Fun: ReturnType FunName tOP Args tCP Body •

    $default  reduce using rule 4 (Fun)


State 18

   16 Body: $@3 • tOB $@4 Lins tCB

    tOB  shift, and go to state 21


State 19

   12 ArgsM: tCOMA • tINT tID $@2 ArgsM

    tINT  shift, and go to state 22


State 20

    9 Args: tINT tID $@1 ArgsM •

    $default  reduce using rule 9 (Args)


State 21

   16 Body: $@3 tOB • $@4 Lins tCB

    $default  reduce using rule 15 ($@4)

    $@4  go to state 23


State 22

   12 ArgsM: tCOMA tINT • tID $@2 ArgsM

    tID  shift, and go to state 24


State 23

   16 Body: $@3 tOB $@4 • Lins tCB

    tCB       reduce using rule 19 (Lins)
    $default  reduce using rule 17 ($@5)

    Lins  go to state 25
    $@5   go to state 26


State 24

   12 ArgsM: tCOMA tINT tID • $@2 ArgsM

    $default  reduce using rule 11 ($@2)

    $@2  go to state 27


State 25

   16 Body: $@3 tOB $@4 Lins • tCB

    tCB  shift, and go to state 28


State 26

   18 Lins: $@5 • Ins Lins

    tRETURN  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31

    tINT      reduce using rule 28 ($@7)
    $default  reduce using rule 26 ($@6)

    Return  go to state 32
    Ins     go to state 33
    Aff     go to state 34
    $@6     go to state 35
    Decla   go to state 36
    $@7     go to state 37
    If      go to state 38
    While   go to state 39


State 27

   12 ArgsM: tCOMA tINT tID $@2 • ArgsM

    tCOMA  shift, and go to state 19

    $default  reduce using rule 13 (ArgsM)

    ArgsM  go to state 40


State 28

   16 Body: $@3 tOB $@4 Lins tCB •

    $default  reduce using rule 16 (Body)


State 29

   20 Return: tRETURN • E tSEM

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 43


State 30

   37 If: tIF • $@8 tOP E tCP $@9 Body $@10 Else

    $default  reduce using rule 34 ($@8)

    $@8  go to state 44


State 31

   43 While: tWHILE • $@12 tOP E tCP $@13 Body

    $default  reduce using rule 41 ($@12)

    $@12  go to state 45


State 32

   25 Ins: Return •

    $default  reduce using rule 25 (Ins)


State 33

   18 Lins: $@5 Ins • Lins

    tCB       reduce using rule 19 (Lins)
    $default  reduce using rule 17 ($@5)

    Lins  go to state 46
    $@5   go to state 26


State 34

   21 Ins: Aff •

    $default  reduce using rule 21 (Ins)


State 35

   27 Aff: $@6 • tID tAS E tSEM

    tID  shift, and go to state 47


State 36

   24 Ins: Decla •

    $default  reduce using rule 24 (Ins)


State 37

   29 Decla: $@7 • tINT Decla1 DeclaS tSEM

    tINT  shift, and go to state 48


State 38

   22 Ins: If •

    $default  reduce using rule 22 (Ins)


State 39

   23 Ins: While •

    $default  reduce using rule 23 (Ins)


State 40

   12 ArgsM: tCOMA tINT tID $@2 ArgsM •

    $default  reduce using rule 12 (ArgsM)


State 41

   54 E: tID •

    $default  reduce using rule 54 (E)


State 42

   53 E: tNB •

    $default  reduce using rule 53 (E)


State 43

   20 Return: tRETURN E • tSEM
   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tSEM      shift, and go to state 49
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 44

   37 If: tIF $@8 • tOP E tCP $@9 Body $@10 Else

    tOP  shift, and go to state 59


State 45

   43 While: tWHILE $@12 • tOP E tCP $@13 Body

    tOP  shift, and go to state 60


State 46

   18 Lins: $@5 Ins Lins •

    $default  reduce using rule 18 (Lins)


State 47

   27 Aff: $@6 tID • tAS E tSEM

    tAS  shift, and go to state 61


State 48

   29 Decla: $@7 tINT • Decla1 DeclaS tSEM

    tID  shift, and go to state 62

    Decla1  go to state 63


State 49

   20 Return: tRETURN E tSEM •

    $default  reduce using rule 20 (Return)


State 50

   44 E: E tPLUS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 64


State 51

   46 E: E tMINUS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 65


State 52

   47 E: E tDIV • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 66


State 53

   45 E: E tMUL • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 67


State 54

   48 E: E tEQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 68


State 55

   52 E: E tINFOREQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 69


State 56

   49 E: E tSUP • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 70


State 57

   50 E: E tSUPOREQ • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 71


State 58

   51 E: E tINF • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 72


State 59

   37 If: tIF $@8 tOP • E tCP $@9 Body $@10 Else

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 73


State 60

   43 While: tWHILE $@12 tOP • E tCP $@13 Body

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 74


State 61

   27 Aff: $@6 tID tAS • E tSEM

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 75


State 62

   30 Decla1: tID •
   31       | tID • tAS E

    tAS  shift, and go to state 76

    $default  reduce using rule 30 (Decla1)


State 63

   29 Decla: $@7 tINT Decla1 • DeclaS tSEM

    tCOMA  shift, and go to state 77

    $default  reduce using rule 32 (DeclaS)

    DeclaS  go to state 78


State 64

   44 E: E • tPLUS E
   44  | E tPLUS E •
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tDIV  shift, and go to state 52
    tMUL  shift, and go to state 53

    $default  reduce using rule 44 (E)


State 65

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   46  | E tMINUS E •
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tDIV  shift, and go to state 52
    tMUL  shift, and go to state 53

    $default  reduce using rule 46 (E)


State 66

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   47  | E tDIV E •
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    $default  reduce using rule 47 (E)


State 67

   44 E: E • tPLUS E
   45  | E • tMUL E
   45  | E tMUL E •
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    $default  reduce using rule 45 (E)


State 68

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   48  | E tEQ E •
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    $default  reduce using rule 48 (E)


State 69

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E
   52  | E tINFOREQ E •

    tPLUS   shift, and go to state 50
    tMINUS  shift, and go to state 51
    tDIV    shift, and go to state 52
    tMUL    shift, and go to state 53

    tINFOREQ  error (nonassociative)
    tSUP      error (nonassociative)
    tSUPOREQ  error (nonassociative)
    tINF      error (nonassociative)

    $default  reduce using rule 52 (E)


State 70

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   49  | E tSUP E •
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tPLUS   shift, and go to state 50
    tMINUS  shift, and go to state 51
    tDIV    shift, and go to state 52
    tMUL    shift, and go to state 53

    tINFOREQ  error (nonassociative)
    tSUP      error (nonassociative)
    tSUPOREQ  error (nonassociative)
    tINF      error (nonassociative)

    $default  reduce using rule 49 (E)


State 71

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   50  | E tSUPOREQ E •
   51  | E • tINF E
   52  | E • tINFOREQ E

    tPLUS   shift, and go to state 50
    tMINUS  shift, and go to state 51
    tDIV    shift, and go to state 52
    tMUL    shift, and go to state 53

    tINFOREQ  error (nonassociative)
    tSUP      error (nonassociative)
    tSUPOREQ  error (nonassociative)
    tINF      error (nonassociative)

    $default  reduce using rule 50 (E)


State 72

   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   51  | E tINF E •
   52  | E • tINFOREQ E

    tPLUS   shift, and go to state 50
    tMINUS  shift, and go to state 51
    tDIV    shift, and go to state 52
    tMUL    shift, and go to state 53

    tINFOREQ  error (nonassociative)
    tSUP      error (nonassociative)
    tSUPOREQ  error (nonassociative)
    tINF      error (nonassociative)

    $default  reduce using rule 51 (E)


State 73

   37 If: tIF $@8 tOP E • tCP $@9 Body $@10 Else
   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tCP       shift, and go to state 79
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 74

   43 While: tWHILE $@12 tOP E • tCP $@13 Body
   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tCP       shift, and go to state 80
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 75

   27 Aff: $@6 tID tAS E • tSEM
   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tSEM      shift, and go to state 81
    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58


State 76

   31 Decla1: tID tAS • E

    tID  shift, and go to state 41
    tNB  shift, and go to state 42

    E  go to state 82


State 77

   33 DeclaS: tCOMA • Decla1 DeclaS

    tID  shift, and go to state 62

    Decla1  go to state 83


State 78

   29 Decla: $@7 tINT Decla1 DeclaS • tSEM

    tSEM  shift, and go to state 84


State 79

   37 If: tIF $@8 tOP E tCP • $@9 Body $@10 Else

    $default  reduce using rule 35 ($@9)

    $@9  go to state 85


State 80

   43 While: tWHILE $@12 tOP E tCP • $@13 Body

    $default  reduce using rule 42 ($@13)

    $@13  go to state 86


State 81

   27 Aff: $@6 tID tAS E tSEM •

    $default  reduce using rule 27 (Aff)


State 82

   31 Decla1: tID tAS E •
   44 E: E • tPLUS E
   45  | E • tMUL E
   46  | E • tMINUS E
   47  | E • tDIV E
   48  | E • tEQ E
   49  | E • tSUP E
   50  | E • tSUPOREQ E
   51  | E • tINF E
   52  | E • tINFOREQ E

    tPLUS     shift, and go to state 50
    tMINUS    shift, and go to state 51
    tDIV      shift, and go to state 52
    tMUL      shift, and go to state 53
    tEQ       shift, and go to state 54
    tINFOREQ  shift, and go to state 55
    tSUP      shift, and go to state 56
    tSUPOREQ  shift, and go to state 57
    tINF      shift, and go to state 58

    $default  reduce using rule 31 (Decla1)


State 83

   33 DeclaS: tCOMA Decla1 • DeclaS

    tCOMA  shift, and go to state 77

    $default  reduce using rule 32 (DeclaS)

    DeclaS  go to state 87


State 84

   29 Decla: $@7 tINT Decla1 DeclaS tSEM •

    $default  reduce using rule 29 (Decla)


State 85

   37 If: tIF $@8 tOP E tCP $@9 • Body $@10 Else

    $default  reduce using rule 14 ($@3)

    Body  go to state 88
    $@3   go to state 18


State 86

   43 While: tWHILE $@12 tOP E tCP $@13 • Body

    $default  reduce using rule 14 ($@3)

    Body  go to state 89
    $@3   go to state 18


State 87

   33 DeclaS: tCOMA Decla1 DeclaS •

    $default  reduce using rule 33 (DeclaS)


State 88

   37 If: tIF $@8 tOP E tCP $@9 Body • $@10 Else

    $default  reduce using rule 36 ($@10)

    $@10  go to state 90


State 89

   43 While: tWHILE $@12 tOP E tCP $@13 Body •

    $default  reduce using rule 43 (While)


State 90

   37 If: tIF $@8 tOP E tCP $@9 Body $@10 • Else

    tELSE  shift, and go to state 91

    $default  reduce using rule 40 (Else)

    Else  go to state 92


State 91

   39 Else: tELSE • $@11 Body

    $default  reduce using rule 38 ($@11)

    $@11  go to state 93


State 92

   37 If: tIF $@8 tOP E tCP $@9 Body $@10 Else •

    $default  reduce using rule 37 (If)


State 93

   39 Else: tELSE $@11 • Body

    $default  reduce using rule 14 ($@3)

    Body  go to state 94
    $@3   go to state 18


State 94

   39 Else: tELSE $@11 Body •

    $default  reduce using rule 39 (Else)
